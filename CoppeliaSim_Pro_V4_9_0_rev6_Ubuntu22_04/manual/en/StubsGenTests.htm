<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Strict//EN"><html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="Content-Language" content="en-us">
<title>StubsGenTests Plugin API reference</title>
<link rel="stylesheet" type="text/css" href="../style.css">
<script type="text/javascript">
//
function getParameterByName(name, url = window.location.href)
{
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if(!results) return null;
    if(!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}
//
                </script><style type="text/css">
td.section { margin: 0; padding: 0; }
                </style>
</head>
<body>
<div align="center"><table class="allEncompassingTable">
<tr><td id="title" class="section"><h1>StubsGenTests Plugin API reference</h1></td></tr>
<tr><td id="info" class="section"><p class="infoBox">Test suite for simStubsGen</p></td></tr>
<tr><td id="alphabetical" class="section"><pre class="lightGreyBox"><a href="?#basic">StubsGenTests.basic</a>
<a href="?#nullable">StubsGenTests.nullable</a>
<a href="?#struct_default">StubsGenTests.struct_default</a>
<a href="?#struct_table">StubsGenTests.struct_table</a>
<a href="?#testLuaDefault">StubsGenTests.testLuaDefault</a>
<a href="?#testLuaNullable">StubsGenTests.testLuaNullable</a>
<a href="?#test_grid">StubsGenTests.test_grid</a>
<a href="?#test_grid2">StubsGenTests.test_grid2</a>
<a href="?#test_struct2">StubsGenTests.test_struct2</a>
</pre></td></tr>
<tr><td id="commands" class="section">
<h3 class="subsectionBar">
<a name="basic" id="basic"></a>StubsGenTests.basic</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">int i, float f, float d, string s, bool b, int[] ti, struct1 z = StubsGenTests.basic(int i, float f, float d, string s, bool b, int[1..2] ti, struct1 z)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>f</strong> (float)</div>
<div>
<strong>d</strong> (float)</div>
<div>
<strong>s</strong> (string)</div>
<div>
<strong>b</strong> (bool)</div>
<div>
<strong>ti</strong> (table of int, size 1..2)</div>
<div>
<strong>z</strong> (struct1)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>f</strong> (float)</div>
<div>
<strong>d</strong> (float)</div>
<div>
<strong>s</strong> (string)</div>
<div>
<strong>b</strong> (bool)</div>
<div>
<strong>ti</strong> (table of int)</div>
<div>
<strong>z</strong> (struct1)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">int i, float f, float d, string s, bool b, list ti, struct1 z = StubsGenTests.basic(int i, float f, float d, string s, bool b, list ti, struct1 z)<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="nullable" id="nullable"></a>StubsGenTests.nullable</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">int i, float f, float d, string s, bool b, int[] ti, struct1 z = StubsGenTests.nullable(int i, float f, float d, string s, bool b, int[1..2] ti, struct1 z)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>f</strong> (float)</div>
<div>
<strong>d</strong> (float)</div>
<div>
<strong>s</strong> (string)</div>
<div>
<strong>b</strong> (bool)</div>
<div>
<strong>ti</strong> (table of int, size 1..2)</div>
<div>
<strong>z</strong> (struct1)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>f</strong> (float)</div>
<div>
<strong>d</strong> (float)</div>
<div>
<strong>s</strong> (string)</div>
<div>
<strong>b</strong> (bool)</div>
<div>
<strong>ti</strong> (table of int)</div>
<div>
<strong>z</strong> (struct1)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">int i, float f, float d, string s, bool b, list ti, struct1 z = StubsGenTests.nullable(int i, float f, float d, string s, bool b, list ti, struct1 z)<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="struct_default" id="struct_default"></a>StubsGenTests.struct_default</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">struct2 z = StubsGenTests.struct_default(struct2 z={10,20,30,40})<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam"><div>
<strong>z</strong> (struct2, default: {10,20,30,40})</div></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet"><div>
<strong>z</strong> (struct2)</div></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">struct2 z = StubsGenTests.struct_default(struct2 z={10,20,30,40})<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="struct_table" id="struct_table"></a>StubsGenTests.struct_table</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">int i, float f, float d, string s, bool b = StubsGenTests.struct_table(int i, string s, struct1[1..2] tz)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>s</strong> (string)</div>
<div>
<strong>tz</strong> (table of struct1, size 1..2)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>f</strong> (float)</div>
<div>
<strong>d</strong> (float)</div>
<div>
<strong>s</strong> (string)</div>
<div>
<strong>b</strong> (bool)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">int i, float f, float d, string s, bool b = StubsGenTests.struct_table(int i, string s, list tz)<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="testLuaDefault" id="testLuaDefault"></a>StubsGenTests.testLuaDefault</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">string r = StubsGenTests.testLuaDefault(int a, string b="x")<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam">
<div>
<strong>a</strong> (int)</div>
<div>
<strong>b</strong> (string, default: "x")</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet"><div>
<strong>r</strong> (string)</div></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">string r = StubsGenTests.testLuaDefault(int a, string b="x")<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="testLuaNullable" id="testLuaNullable"></a>StubsGenTests.testLuaNullable</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">StubsGenTests.testLuaNullable(int a, string b)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam">
<div>
<strong>a</strong> (int)</div>
<div>
<strong>b</strong> (string)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet">-</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">StubsGenTests.testLuaNullable(int a, string b)<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="test_grid" id="test_grid"></a>StubsGenTests.test_grid</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">grid a = StubsGenTests.test_grid(grid a)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam"><div>
<strong>a</strong> (grid)</div></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet"><div>
<strong>a</strong> (grid)</div></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">grid a = StubsGenTests.test_grid(grid a)<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="test_grid2" id="test_grid2"></a>StubsGenTests.test_grid2</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">StubsGenTests.test_grid2(grid mtx, grid mtx3x3, grid t4x2xN, grid mtx2)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam">
<div>
<strong>mtx</strong> (grid)</div>
<div>
<strong>mtx3x3</strong> (grid)</div>
<div>
<strong>t4x2xN</strong> (grid)</div>
<div>
<strong>mtx2</strong> (grid)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet"></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">StubsGenTests.test_grid2(grid mtx, grid mtx3x3, grid t4x2xN, grid mtx2)<br>
</td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="test_struct2" id="test_struct2"></a>StubsGenTests.test_struct2</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftLSyn">Lua synopsis</td>
<td class="apiTableRightLSyn">int i, int in, int id, int idn = StubsGenTests.test_struct2(struct2 a)<br>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Lua parameters</td>
<td class="apiTableRightLParam"><div>
<strong>a</strong> (struct2)</div></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLRet">Lua return values</td>
<td class="apiTableRightLRet">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>in</strong> (int)</div>
<div>
<strong>id</strong> (int)</div>
<div>
<strong>idn</strong> (int)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftPSyn">Python synopsis</td>
<td class="apiTableRightPSyn">int i, int in, int id, int idn = StubsGenTests.test_struct2(struct2 a)<br>
</td>
</tr>
</table>
<br>
</td></tr>
<tr><td id="enums" class="section">
<br><br><h1>Constants</h1>
<p>Constants used in the various functions. Refer to each constant using <i>enumName.constantName</i>, i.e. <b>simUI.curve_type.xy</b> for <b>xy</b> constant in <b>simUI.curve_type</b> enum.</p>
<h3 class="subsectionBar">
<a name="enum:enum1" id="enum:enum1"></a>StubsGenTests.enum1</h3>
<table class="apiConstantsTable"><tbody><tr><td>
<div><strong>a</strong></div>
<div><strong>b</strong></div>
<div><strong>the_answer</strong></div>
</td></tr></tbody></table>
</td></tr>
<tr><td id="structs" class="section">
<br><br><h1>Data structures</h1>
<p>Data structures are used to pass complex data around. Create data structures in Lua in the form of a map, e.g.: <code>{line_size=3, add_to_legend=false, selectable=true}</code></p>
<h3 class="subsectionBar">
<a name="struct:struct1" id="struct:struct1"></a>struct1</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">
                                                Description
                                            </td>
<td class="apiTableRightDescr"><br></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Fields</td>
<td class="apiTableRightLParam">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>f</strong> (float)</div>
<div>
<strong>d</strong> (float)</div>
<div>
<strong>s</strong> (string)</div>
<div>
<strong>b</strong> (bool)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftDescr">
                                                See also
                                            </td>
<td class="apiTableRightDescr"></td>
</tr>
</table>
<br><h3 class="subsectionBar">
<a name="struct:struct2" id="struct:struct2"></a>struct2</h3>
<table class="apiTable">
<tr class="apiTableTr">
<td class="apiTableLeftDescr">
                                                Description
                                            </td>
<td class="apiTableRightDescr"><br></td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftLParam">Fields</td>
<td class="apiTableRightLParam">
<div>
<strong>i</strong> (int)</div>
<div>
<strong>in</strong> (int)</div>
<div>
<strong>id</strong> (int, default: 42)</div>
<div>
<strong>idn</strong> (int, default: 43)</div>
</td>
</tr>
<tr class="apiTableTr">
<td class="apiTableLeftDescr">
                                                See also
                                            </td>
<td class="apiTableRightDescr"></td>
</tr>
</table>
<br>
</td></tr>
<tr><td id="scriptFunctions" class="section"></td></tr>
</table></div>
<script type="text/javascript">
//
view = getParameterByName('view')
document.getElementById('alphabetical').style.display = view == 'alphabetical' ? 'table-cell' : 'none'
document.getElementById('commands').style.display = view == null ? 'table-cell' : 'none'
document.getElementById('enums').style.display = view == null ? 'table-cell' : 'none'
document.getElementById('structs').style.display = view == null ? 'table-cell' : 'none'
document.getElementById('scriptFunctions').style.display = view == null ? 'table-cell' : 'none'
//
                </script><link rel="stylesheet" href="../js/hljs/11.8.0/styles/default.min.css">
<script src="../js/hljs/11.8.0/highlight.min.js"></script><script src="../js/hljs/11.8.0/languages/cmake.min.js"></script><script src="../js/hljs/11.8.0/languages/cpp.min.js"></script><script src="../js/hljs/11.8.0/languages/java.min.js"></script><script src="../js/hljs/11.8.0/languages/javascript.min.js"></script><script src="../js/hljs/11.8.0/languages/lua.min.js"></script><script src="../js/hljs/11.8.0/languages/matlab.min.js"></script><script src="../js/hljs/11.8.0/languages/python.min.js"></script><script src="../js/hljs/11.8.0/languages/rust.min.js"></script><script src="../js/hljs/11.8.0/languages/xml.min.js"></script><script>document.querySelectorAll('code.hljs').forEach(el => {hljs.highlightElement(el);})</script>
</body>
</html>
